package fr.leboncoin.boundaries;

import fr.leboncoin.Globale;
import fr.leboncoin.daos.ConnexionMySQLLocale;
import java.beans.PropertyVetoException;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;

/**
 *
 * @author pascal
 */
public class MDI extends javax.swing.JFrame {

    private Connection icn;
    // Pour du Singleton
    private JDialogAPropos jda;

    /**
     * Creates new form MDI
     */
    public MDI() {
        initComponents();

//        new JDialogAuthentification(this, true);
        //seConnecter(String serveur, String port, String ut, String mdp, String bd)
        String ip = Globale.getIp();
        String port = Globale.getPort();
        String ut = Globale.getUt();
        String mdp = Globale.getMdp();
        String bd = Globale.getBd();

        ConnexionMySQLLocale cnx = new ConnexionMySQLLocale();
        icn = cnx.seConnecter(ip, port, ut, mdp, bd);
        Globale.setCn(icn);

        Globale.setBureauMDI(desktopPane);

        Globale.setMdi((JFrame) this);

        setTitle("Application Desktop 'Le bon coin'");
        setSize(800, 600);

        setLocationRelativeTo(null);

//        paysCRUDMenuItemActionPerformed(null);
//        regionsCRUDMenuItemActionPerformed(null);
//        departementsCRUDMenuItemActionPerformed(null);
//        villesCRUDMenuItemActionPerformed(null);
//        categoriesClientsCRUDMenuItemActionPerformed(null);
//        categoriesProduitCRUDMenuItemActionPerformed(null);
//        sousCategorieProduitCRUDSelectMenuItemActionPerformed(null);
//        importPaysMenuItemActionPerformed(null);
        setVisible(true);

    } /// CONSTRUCTEUR

    /**
     *
     * @param jif
     */
    private void ouvrirJIF(JInternalFrame jif) {
        //JIFPaysInsert jif = new JIFPaysInsert();
        this.desktopPane.add(jif);
        // La met au premier plan en plein ecran
//        try {
//            jif.setMaximum(true);
//            jif.setSelected(true);
////            cascadeMenuItemActionPerformed(null);
//        } catch (PropertyVetoException ex) {
//            Logger.getLogger(MDI.class.getName()).log(Level.SEVERE, null, ex);
//        }
    } /// ouvrirJIF

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        fichierMenu = new javax.swing.JMenu();
        authentificationMenuItem = new javax.swing.JMenuItem();
        deconnexionMenuItem = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        quitterMenuItem = new javax.swing.JMenuItem();
        CRUDMenu = new javax.swing.JMenu();
        paysCRUDMenuItem = new javax.swing.JMenuItem();
        regionsCRUDMenuItem = new javax.swing.JMenuItem();
        departementsCRUDMenuItem = new javax.swing.JMenuItem();
        villesCRUDMenuItem = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        categoriesProduitCRUDMenuItem = new javax.swing.JMenuItem();
        sousCategorieProduitCRUDSelectMenuItem = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        categoriesClientsCRUDMenuItem = new javax.swing.JMenuItem();
        UtilitairesMenu = new javax.swing.JMenu();
        importPaysMenuItem = new javax.swing.JMenuItem();
        importRegionsMenuItem = new javax.swing.JMenuItem();
        importDepartementsMenuItem = new javax.swing.JMenuItem();
        importVillesMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        importCategoriesProduitsMenuItem = new javax.swing.JMenuItem();
        recherchesMenu = new javax.swing.JMenu();
        rechercheProduitsMenuItem = new javax.swing.JMenuItem();
        rechercheClientMenuItem = new javax.swing.JMenuItem();
        statistiquesMenu = new javax.swing.JMenu();
        CAMenuItem = new javax.swing.JMenuItem();
        CAAnneeEnCoursMenuItem = new javax.swing.JMenuItem();
        CAProduitMenuItem = new javax.swing.JMenuItem();
        CAProduitVilleMenuItem = new javax.swing.JMenuItem();
        fenetreMenu = new javax.swing.JMenu();
        cascadeMenuItem = new javax.swing.JMenuItem();
        horizonaleMenuItem = new javax.swing.JMenuItem();
        verticaleMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        fermerMenuItem = new javax.swing.JMenuItem();
        fermerToutMenuItem = new javax.swing.JMenuItem();
        aideMenu = new javax.swing.JMenu();
        contenuMenuItem = new javax.swing.JMenuItem();
        AProposMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        fichierMenu.setMnemonic('f');
        fichierMenu.setText("Fichier");

        authentificationMenuItem.setMnemonic('a');
        authentificationMenuItem.setText("S'authentifier");
        authentificationMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authentificationMenuItemActionPerformed(evt);
            }
        });
        fichierMenu.add(authentificationMenuItem);

        deconnexionMenuItem.setMnemonic('d');
        deconnexionMenuItem.setText("Se déconnecter");
        deconnexionMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deconnexionMenuItemActionPerformed(evt);
            }
        });
        fichierMenu.add(deconnexionMenuItem);
        fichierMenu.add(jSeparator4);

        quitterMenuItem.setMnemonic('q');
        quitterMenuItem.setText("Quitter");
        quitterMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitterMenuItemActionPerformed(evt);
            }
        });
        fichierMenu.add(quitterMenuItem);

        menuBar.add(fichierMenu);

        CRUDMenu.setMnemonic('c');
        CRUDMenu.setText("CRUD");

        paysCRUDMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        paysCRUDMenuItem.setText("Pays CRUD");
        paysCRUDMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paysCRUDMenuItemActionPerformed(evt);
            }
        });
        CRUDMenu.add(paysCRUDMenuItem);

        regionsCRUDMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        regionsCRUDMenuItem.setText("Régions CRUD");
        regionsCRUDMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regionsCRUDMenuItemActionPerformed(evt);
            }
        });
        CRUDMenu.add(regionsCRUDMenuItem);

        departementsCRUDMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        departementsCRUDMenuItem.setText("Départements CRUD");
        departementsCRUDMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departementsCRUDMenuItemActionPerformed(evt);
            }
        });
        CRUDMenu.add(departementsCRUDMenuItem);

        villesCRUDMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        villesCRUDMenuItem.setMnemonic('u');
        villesCRUDMenuItem.setText("Villes CRUD");
        villesCRUDMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                villesCRUDMenuItemActionPerformed(evt);
            }
        });
        CRUDMenu.add(villesCRUDMenuItem);
        CRUDMenu.add(jSeparator7);

        categoriesProduitCRUDMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        categoriesProduitCRUDMenuItem.setMnemonic('t');
        categoriesProduitCRUDMenuItem.setText("Catégories produits CRUD");
        categoriesProduitCRUDMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriesProduitCRUDMenuItemActionPerformed(evt);
            }
        });
        CRUDMenu.add(categoriesProduitCRUDMenuItem);

        sousCategorieProduitCRUDSelectMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        sousCategorieProduitCRUDSelectMenuItem.setMnemonic('c');
        sousCategorieProduitCRUDSelectMenuItem.setText("Sous-Catégories produits CRUD");
        sousCategorieProduitCRUDSelectMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sousCategorieProduitCRUDSelectMenuItemActionPerformed(evt);
            }
        });
        CRUDMenu.add(sousCategorieProduitCRUDSelectMenuItem);
        CRUDMenu.add(jSeparator8);

        categoriesClientsCRUDMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        categoriesClientsCRUDMenuItem.setMnemonic('t');
        categoriesClientsCRUDMenuItem.setText("Catégories clients CRUD");
        categoriesClientsCRUDMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriesClientsCRUDMenuItemActionPerformed(evt);
            }
        });
        CRUDMenu.add(categoriesClientsCRUDMenuItem);

        menuBar.add(CRUDMenu);

        UtilitairesMenu.setText("Utilitaires");

        importPaysMenuItem.setText("Import Pays");
        importPaysMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importPaysMenuItemActionPerformed(evt);
            }
        });
        UtilitairesMenu.add(importPaysMenuItem);

        importRegionsMenuItem.setText("Import Régions");
        importRegionsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importRegionsMenuItemActionPerformed(evt);
            }
        });
        UtilitairesMenu.add(importRegionsMenuItem);

        importDepartementsMenuItem.setText("Import Départements");
        importDepartementsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importDepartementsMenuItemActionPerformed(evt);
            }
        });
        UtilitairesMenu.add(importDepartementsMenuItem);

        importVillesMenuItem.setText("Import Villes");
        importVillesMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importVillesMenuItemActionPerformed(evt);
            }
        });
        UtilitairesMenu.add(importVillesMenuItem);
        UtilitairesMenu.add(jSeparator2);

        importCategoriesProduitsMenuItem.setText("Import Catégories produits");
        importCategoriesProduitsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importCategoriesProduitsMenuItemActionPerformed(evt);
            }
        });
        UtilitairesMenu.add(importCategoriesProduitsMenuItem);

        menuBar.add(UtilitairesMenu);

        recherchesMenu.setMnemonic('r');
        recherchesMenu.setText("Recherches");

        rechercheProduitsMenuItem.setText("Rechercher un ou des produits");
        rechercheProduitsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercheProduitsMenuItemActionPerformed(evt);
            }
        });
        recherchesMenu.add(rechercheProduitsMenuItem);

        rechercheClientMenuItem.setText("Rechercher un client");
        rechercheClientMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercheClientMenuItemActionPerformed(evt);
            }
        });
        recherchesMenu.add(rechercheClientMenuItem);

        menuBar.add(recherchesMenu);

        statistiquesMenu.setMnemonic('s');
        statistiquesMenu.setText("Statistiques");

        CAMenuItem.setMnemonic('c');
        CAMenuItem.setText("Chiffre d'affaires");
        CAMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CAMenuItemActionPerformed(evt);
            }
        });
        statistiquesMenu.add(CAMenuItem);

        CAAnneeEnCoursMenuItem.setMnemonic('a');
        CAAnneeEnCoursMenuItem.setText("Chiffre d'affaires de l'année");
        CAAnneeEnCoursMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CAAnneeEnCoursMenuItemActionPerformed(evt);
            }
        });
        statistiquesMenu.add(CAAnneeEnCoursMenuItem);

        CAProduitMenuItem.setMnemonic('p');
        CAProduitMenuItem.setText("CA par produit");
        CAProduitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CAProduitMenuItemActionPerformed(evt);
            }
        });
        statistiquesMenu.add(CAProduitMenuItem);

        CAProduitVilleMenuItem.setMnemonic('v');
        CAProduitVilleMenuItem.setText("CA par Produit par Ville");
        CAProduitVilleMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CAProduitVilleMenuItemActionPerformed(evt);
            }
        });
        statistiquesMenu.add(CAProduitVilleMenuItem);

        menuBar.add(statistiquesMenu);

        fenetreMenu.setMnemonic('f');
        fenetreMenu.setText("Fenêtre");

        cascadeMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        cascadeMenuItem.setMnemonic('c');
        cascadeMenuItem.setText("Cascade");
        cascadeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cascadeMenuItemActionPerformed(evt);
            }
        });
        fenetreMenu.add(cascadeMenuItem);

        horizonaleMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.ALT_MASK));
        horizonaleMenuItem.setMnemonic('h');
        horizonaleMenuItem.setText("Horizontale");
        horizonaleMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horizonaleMenuItemActionPerformed(evt);
            }
        });
        fenetreMenu.add(horizonaleMenuItem);

        verticaleMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_MASK));
        verticaleMenuItem.setMnemonic('v');
        verticaleMenuItem.setText("Verticale");
        verticaleMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verticaleMenuItemActionPerformed(evt);
            }
        });
        fenetreMenu.add(verticaleMenuItem);
        fenetreMenu.add(jSeparator1);

        fermerMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.ALT_MASK));
        fermerMenuItem.setMnemonic('f');
        fermerMenuItem.setText("Fermer");
        fermerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fermerMenuItemActionPerformed(evt);
            }
        });
        fenetreMenu.add(fermerMenuItem);

        fermerToutMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.ALT_MASK));
        fermerToutMenuItem.setMnemonic('t');
        fermerToutMenuItem.setText("Fermer tout");
        fermerToutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fermerToutMenuItemActionPerformed(evt);
            }
        });
        fenetreMenu.add(fermerToutMenuItem);

        menuBar.add(fenetreMenu);

        aideMenu.setMnemonic('a');
        aideMenu.setText("Aide");

        contenuMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.ALT_MASK));
        contenuMenuItem.setMnemonic('c');
        contenuMenuItem.setText("Contenu");
        aideMenu.add(contenuMenuItem);

        AProposMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        AProposMenuItem.setMnemonic('a');
        AProposMenuItem.setText("A propos");
        AProposMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AProposMenuItemActionPerformed(evt);
            }
        });
        aideMenu.add(AProposMenuItem);

        menuBar.add(aideMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quitterMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitterMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_quitterMenuItemActionPerformed

    private void villesCRUDMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_villesCRUDMenuItemActionPerformed
        JIFVilleCRUD jif = new JIFVilleCRUD();
        ouvrirJIF(jif);
    }//GEN-LAST:event_villesCRUDMenuItemActionPerformed

    private void fermerToutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fermerToutMenuItemActionPerformed
        JDesktopPane jdpBureau = this.desktopPane;

        JInternalFrame[] tFrames = jdpBureau.getAllFrames();
        try {
            for (int i = 0; i < tFrames.length; ++i) {
                tFrames[i].setClosed(true);
            }
        } catch (PropertyVetoException e) {
        }
    }//GEN-LAST:event_fermerToutMenuItemActionPerformed

    private void fermerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fermerMenuItemActionPerformed
        JDesktopPane jdpBureau = this.desktopPane;
        JInternalFrame[] tFrames = jdpBureau.getAllFrames();
        try {
            if (tFrames.length > 0) {
                tFrames[0].setClosed(true);
            }
        } catch (PropertyVetoException e) {
        }
    }//GEN-LAST:event_fermerMenuItemActionPerformed

    private void horizonaleMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horizonaleMenuItemActionPerformed
        JDesktopPane jdpBureau = this.desktopPane;

        JInternalFrame[] tFrames = jdpBureau.getAllFrames();

        try {
            int ly = 0;

            int liLargeurBureau = jdpBureau.getWidth();
            int liHauteurBureau = jdpBureau.getHeight();
            int liHauteur = liHauteurBureau / tFrames.length;

            for (int i = tFrames.length - 1; i >= 0; i--) {
                tFrames[i].setBounds(0, ly, liLargeurBureau, liHauteur);
                ly += liHauteur;
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_horizonaleMenuItemActionPerformed

    private void verticaleMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verticaleMenuItemActionPerformed
        JDesktopPane jdpBureau = this.desktopPane;

        JInternalFrame[] tFrames = jdpBureau.getAllFrames();
        try {
            int lx = 0;

            int liLargeurBureau = jdpBureau.getWidth();
            int liHauteurBureau = jdpBureau.getHeight();
            int liLargeur = liLargeurBureau / tFrames.length;

            for (int i = tFrames.length - 1; i >= 0; i--) {
                tFrames[i].setBounds(lx, 0, liLargeur, liHauteurBureau);
                lx += liLargeur;
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_verticaleMenuItemActionPerformed

    private void cascadeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cascadeMenuItemActionPerformed
        JDesktopPane jdpBureau = this.desktopPane;

        JInternalFrame[] tFrames = jdpBureau.getAllFrames();
        try {
            int lx = 0, ly = 0;

            for (int i = tFrames.length - 1; i >= 0; i--) {
                // Arbitrairement a 500 sur 300
                tFrames[i].setBounds(lx, ly, 500, 300);
                lx += 30;
                ly += 30;
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_cascadeMenuItemActionPerformed

    private void AProposMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AProposMenuItemActionPerformed
        // Singleton
        // JDialog(parent, modal)
        //if (jda == null) {

        if (!Globale.isDansListeJDialog("JDialogAPropos")) {
            jda = new JDialogAPropos(this, false);
            Globale.ajouterAListeJDialog("JDialogAPropos");
        }
        //}
    }//GEN-LAST:event_AProposMenuItemActionPerformed

    private void sousCategorieProduitCRUDSelectMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sousCategorieProduitCRUDSelectMenuItemActionPerformed
        //
        JIFSousCategorieProduitCRUDV1 jif = new JIFSousCategorieProduitCRUDV1();
        ouvrirJIF(jif);
    }//GEN-LAST:event_sousCategorieProduitCRUDSelectMenuItemActionPerformed

    private void CAMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CAMenuItemActionPerformed
        //
//        JIFCA jif = new JIFCA();
//        ouvrirJIF(jif);
    }//GEN-LAST:event_CAMenuItemActionPerformed

    private void CAAnneeEnCoursMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CAAnneeEnCoursMenuItemActionPerformed
        //
//        JIFCAAnneeEnCours jif = new JIFCAAnneeEnCours();
//        ouvrirJIF(jif);
    }//GEN-LAST:event_CAAnneeEnCoursMenuItemActionPerformed

    private void CAProduitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CAProduitMenuItemActionPerformed
        //
//        JIFCAParProduit jif = new JIFCAParProduit();
//        ouvrirJIF(jif);
    }//GEN-LAST:event_CAProduitMenuItemActionPerformed

    private void CAProduitVilleMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CAProduitVilleMenuItemActionPerformed
        //
//        JIFCAParProduitParVille jif = new JIFCAParProduitParVille();
//        ouvrirJIF(jif);
    }//GEN-LAST:event_CAProduitVilleMenuItemActionPerformed

    private void categoriesProduitCRUDMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriesProduitCRUDMenuItemActionPerformed
        //
        JIFCategorieProduitCRUDV1 jif = new JIFCategorieProduitCRUDV1();
        //JIFCategorieProduitCRUDV2 jif = new JIFCategorieProduitCRUDV2();
        ouvrirJIF(jif);
    }//GEN-LAST:event_categoriesProduitCRUDMenuItemActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //
        try {
            icn.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_formWindowClosing

    private void rechercheProduitsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercheProduitsMenuItemActionPerformed
        //
//        new JDialogRechercheProduits(this, false, desktopPane);
    }//GEN-LAST:event_rechercheProduitsMenuItemActionPerformed

    private void rechercheClientMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercheClientMenuItemActionPerformed
        //
//        new JDialogRechercheClient(this, false, desktopPane);
    }//GEN-LAST:event_rechercheClientMenuItemActionPerformed

    private void authentificationMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authentificationMenuItemActionPerformed
        //
        new JDialogAuthentification(this, true);
    }//GEN-LAST:event_authentificationMenuItemActionPerformed

    private void deconnexionMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deconnexionMenuItemActionPerformed
        //
        Globale.setAuthentifie(false);
        System.out.println(Globale.isAuthentifie());
    }//GEN-LAST:event_deconnexionMenuItemActionPerformed

    private void paysCRUDMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paysCRUDMenuItemActionPerformed

        if (Globale.isAuthentifie()) {
            JIFPaysCRUD jif = new JIFPaysCRUD();
            ouvrirJIF(jif);
        } else {
            new JDialogAuthentification(null, true);
        }
    }//GEN-LAST:event_paysCRUDMenuItemActionPerformed

    private void regionsCRUDMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regionsCRUDMenuItemActionPerformed
        //
        JIFRegionCRUD jif = new JIFRegionCRUD();
        ouvrirJIF(jif);
    }//GEN-LAST:event_regionsCRUDMenuItemActionPerformed

    private void departementsCRUDMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departementsCRUDMenuItemActionPerformed
        //
        JIFDepartementCRUD jif = new JIFDepartementCRUD();
        ouvrirJIF(jif);
    }//GEN-LAST:event_departementsCRUDMenuItemActionPerformed

    private void importPaysMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importPaysMenuItemActionPerformed
        JIFCSV2BD jif = new JIFCSV2BD("Pays");
        this.desktopPane.add(jif);

    }//GEN-LAST:event_importPaysMenuItemActionPerformed

    private void importRegionsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importRegionsMenuItemActionPerformed
        JIFCSV2BD jif = new JIFCSV2BD("Régions");
        this.desktopPane.add(jif);
    }//GEN-LAST:event_importRegionsMenuItemActionPerformed

    private void importDepartementsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importDepartementsMenuItemActionPerformed
        JIFCSV2BD jif = new JIFCSV2BD("Départements");
        this.desktopPane.add(jif);
    }//GEN-LAST:event_importDepartementsMenuItemActionPerformed

    private void importVillesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importVillesMenuItemActionPerformed
        JIFCSV2BD jif = new JIFCSV2BD("Villes");
        this.desktopPane.add(jif);
    }//GEN-LAST:event_importVillesMenuItemActionPerformed

    private void importCategoriesProduitsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importCategoriesProduitsMenuItemActionPerformed
        JIFCSV2BD jif = new JIFCSV2BD("Catégories");
        this.desktopPane.add(jif);
    }//GEN-LAST:event_importCategoriesProduitsMenuItemActionPerformed

    private void categoriesClientsCRUDMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriesClientsCRUDMenuItemActionPerformed
        JIFCategorieClientCRUD jif = new JIFCategorieClientCRUD();
        ouvrirJIF(jif);
    }//GEN-LAST:event_categoriesClientsCRUDMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MDI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AProposMenuItem;
    private javax.swing.JMenuItem CAAnneeEnCoursMenuItem;
    private javax.swing.JMenuItem CAMenuItem;
    private javax.swing.JMenuItem CAProduitMenuItem;
    private javax.swing.JMenuItem CAProduitVilleMenuItem;
    private javax.swing.JMenu CRUDMenu;
    private javax.swing.JMenu UtilitairesMenu;
    private javax.swing.JMenu aideMenu;
    private javax.swing.JMenuItem authentificationMenuItem;
    private javax.swing.JMenuItem cascadeMenuItem;
    private javax.swing.JMenuItem categoriesClientsCRUDMenuItem;
    private javax.swing.JMenuItem categoriesProduitCRUDMenuItem;
    private javax.swing.JMenuItem contenuMenuItem;
    private javax.swing.JMenuItem deconnexionMenuItem;
    private javax.swing.JMenuItem departementsCRUDMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenu fenetreMenu;
    private javax.swing.JMenuItem fermerMenuItem;
    private javax.swing.JMenuItem fermerToutMenuItem;
    private javax.swing.JMenu fichierMenu;
    private javax.swing.JMenuItem horizonaleMenuItem;
    private javax.swing.JMenuItem importCategoriesProduitsMenuItem;
    private javax.swing.JMenuItem importDepartementsMenuItem;
    private javax.swing.JMenuItem importPaysMenuItem;
    private javax.swing.JMenuItem importRegionsMenuItem;
    private javax.swing.JMenuItem importVillesMenuItem;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem paysCRUDMenuItem;
    private javax.swing.JMenuItem quitterMenuItem;
    private javax.swing.JMenuItem rechercheClientMenuItem;
    private javax.swing.JMenuItem rechercheProduitsMenuItem;
    private javax.swing.JMenu recherchesMenu;
    private javax.swing.JMenuItem regionsCRUDMenuItem;
    private javax.swing.JMenuItem sousCategorieProduitCRUDSelectMenuItem;
    private javax.swing.JMenu statistiquesMenu;
    private javax.swing.JMenuItem verticaleMenuItem;
    private javax.swing.JMenuItem villesCRUDMenuItem;
    // End of variables declaration//GEN-END:variables

}
